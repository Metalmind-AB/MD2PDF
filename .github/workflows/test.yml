name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    # Install WeasyPrint system dependencies
    - name: Install WeasyPrint dependencies (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libcairo2-dev \
          libpango1.0-dev \
          libgdk-pixbuf2.0-dev \
          libffi-dev \
          shared-mime-info \
          fonts-liberation \
          fonts-dejavu-core \
          fontconfig

    - name: Install WeasyPrint dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install cairo pango gdk-pixbuf libffi

    - name: Install WeasyPrint dependencies (Windows)
      if: runner.os == 'Windows'
      run: |
        # Install GTK3 runtime for WeasyPrint
        choco install -y gtk-runtime
        # Set GTK_FOLDER environment variable
        echo "GTK_FOLDER=C:\gtk-build\gtk\x64\release" >> $env:GITHUB_ENV

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[test,dev]

    - name: Verify WeasyPrint installation
      run: |
        python -c "import weasyprint; print('WeasyPrint version:', weasyprint.__version__)"

    - name: Run tests with pytest
      run: |
        pytest tests/ \
          --cov=md2pdf \
          --cov-report=xml \
          --cov-report=term-missing \
          --junitxml=test-results-${{ matrix.os }}-py${{ matrix.python-version }}.xml \
          -v

    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results-${{ matrix.os }}-py${{ matrix.python-version }}
        path: test-results-*.xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  integration-test:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install WeasyPrint dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libcairo2-dev \
          libpango1.0-dev \
          libgdk-pixbuf2.0-dev \
          libffi-dev \
          shared-mime-info \
          fonts-liberation \
          fonts-dejavu-core \
          fontconfig

    - name: Install package
      run: |
        python -m pip install --upgrade pip
        pip install -e .

    - name: Run integration tests
      run: |
        # Test CLI command
        echo "# Test Document" > test.md
        echo "This is a test." >> test.md
        md2pdf test.md test.pdf
        
        # Verify PDF was created
        if [ -f "test.pdf" ]; then
          echo "✓ PDF generation successful"
          ls -la test.pdf
        else
          echo "✗ PDF generation failed"
          exit 1
        fi

    - name: Upload generated PDF
      uses: actions/upload-artifact@v3
      with:
        name: integration-test-pdf
        path: test.pdf